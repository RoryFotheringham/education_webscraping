<doc>
  <source>MIT</source>
  <date>28/01/2023</date>
  <course>
    <course_url>https://ocw.mit.edu/courses/10-492-1-integrated-chemical-engineering-topics-i-process-control-by-design-fall-2004/</course_url>
    <course_title>Integrated Chemical Engineering Topics I: Process Control by Design</course_title>
    <course_tags>
      <list>Engineering </list>
      <list>Science </list>
      <list>Chemistry </list>
    </course_tags>
  </course>
  <lectures>
    <lecture>
      <lecture_title>Heat Exchanger Network, Heat Recovery Scheme</lecture_title>
      <lecture_pdf_url>https://ocw.mit.edu/courses/10-492-1-integrated-chemical-engineering-topics-i-process-control-by-design-fall-2004/resources/notes_3_hx_ntwrk/</lecture_pdf_url>
      <lectureno>10</lectureno>
      <slides>
        <slide>
          <slideno>8</slideno>
          <text>Fall 2004 ICE Topics: Process Control by Design  10.492 
 Lecture Notes 3: the Heat Exch anger Network for Heat Recovery 
revised 2004 Dec 17  9 we do an example to calculate RGA 
Let us for convenience presume these are all unspeci fied organic liquid streams.  Let all the heat 
capacities be simply 2500 J kg-1 K-1 and all the heat transf er coefficients 250 W m-2 K-1.  Our 
design has led us to three iden tical heat exchangers of 117 m2.  The inlet streams are 
 
W1: 8.2 kg s-1  T1:250C 
W2: 9.1 kg s-1  T2:136C 
W3: 5.6 kg s-1  T3:100C 
 We calculate the corresponding intermediate and output variables  T
4: 196.2C T 6: 129.3C 
T5: 159.8C T 8: 223.4C 
T7: 144.7C T 9: 168.8C 
 Matrices P
m and P d are 
 
Pm = 
   -0.5998   -3.9815 
   -0.2312   -9.3344 
   -2.9267   -4.2319 
 
 
Pd =     6.0495    0.1114    0.3487    0.5399 
    3.3765    0.7906    0.1344    0.0750 
    5.7393    0.3142    0.6031    0.0827 
 
where the units of the P m elements, and the first column of  P d elements, are K s kg-1.  The 
remaining elements of P d are dimensionless. 
 Actually, our first controllability problem has b een visible for some time: there are only two 
manipulated variables to deploy ag ainst three desired controlled variables.  Hence we must let 
one of these remain uncontrolled.  We thus calc ulate RGA from the appropriate submatrix of P
m 
for three separate cases:  control T
6 and T 8 
RGA = 
    1.1968   -0.1968 
   -0.1968    1.1968 
 
control T 6 and T 9 
RGA = 
   -0.2785    1.2785 
    1.2785   -0.2785</text>
        </slide>
        <slide>
          <slideno>12</slideno>
          <text>Fall 2004 ICE Topics: Process Control by Design  10.492 
 Lecture Notes 3: the Heat Exch anger Network for Heat Recovery 
revised 2004 Dec 17  13 We rewrite f_calc.m and update the main program as needed to calculate  the linear system 
matrices. 
 We calculate the RGA for each scheme to guide us in pairing MV and CV.  We calculate DC, 
and may have to adapt the design if DC indicates that we cannot  compensate for disturbances 
with the reference bypass flow, or  trim HX size, that we chose. 
 
how the story ends 
What do you find?  
references 
(1) K. Beers, 10.34 , ocw.mit.edu. 
(2) T. McAvoy, Interaction Analysis , Instrument Society of America, 1983. 
(3) W. Seider, J. Seader,  and D. Le win, Product and Process Design Principles , 2nd ed, 
Wylie, 2004. 
 
nomenclature 
Cp liquid specific heat 
W mass flow rate P
d matrix of gain coefficients for the disturbance variables 
Pm matrix of gain coefficients for the manipulated variables 
Q heat duty of a heat exchanger T temperature T
in inlet temperature for flowing stream 
Tout outlet temperature for flowing stream 
Tref thermodynamic reference temperature for enthalpy 
U overall coefficient of heat transfer for a heat exchanger x
d vector of input variables into th e system, the disturbance variables 
xm vector of input variables into the system, the manipulated variables 
y vector of output variables from th e system, the controlled variables 
 abbreviations
 
CV controlled variable, a syst em output that we wish to maintain at a set point value 
DC disturbance cost DV disturbance variabl e, a system input that we have no influence over 
MV manipulated variable, a system i nput that we may adjust for our purposes 
RGA relative gain array  subscripts
 
cold colder stream in a heat exchanger hot hotter stream in a heat exchanger r a reference operating cond ition around which we deri ve a linear approximation 
 superscripts
 
 indicates a deviation variab le; i.e., the physical variable minus a reference value 
* indicates a scaled variable; i.e., variab le has been divided by its operating range</text>
        </slide>
        <slide>
          <slideno>5</slideno>
          <text>Fall 2004 ICE Topics: Process Control by Design  10.492 
 Lecture Notes 3: the Heat Exch anger Network for Heat Recovery 
revised 2004 Dec 17  6 we must develop several tools before we can proceed with this plan 
If we start to get bogged down in  details, it will help to rememb er the side-by-side comparison 
presented above.  These numerical methods are just more ways to accomplish the same steps we 
followed in our simpler shower problem.  root-finding
 
Let us think of our six equations as a nonlinear vector function F .  A valid steady-state is 
described by   
0F= (3-7) 
 
Thus the root of F  is the vector of 3 CV and 3 IV th at satisfy the energy balances and 
performance equations at steady-state (for speci fied values of DV, MV, and parameters).  
Numerical root-finding is done by an  algorithm that seeks to drive F to zero by varying values of 
the root.   
 
 guess root value x guess 
 calculate the function F  at the guessed root F (xguess) 
 is F close enough to zero? 
 if so, declare x guess the root 
 if not, modify x guess in some way that depends on what was learned in calculating F  and 
go around again 
 This algorithm is easiest to visualize for scalar F and x, but applies equally to our vectors.  The 
trick is specifying the italicized part of the la st step.  Various schemes are used  repeated 
bisection of the interval of x known to contain the root, aimi ng at the root by calculating the 
slope of F at each guessed value of the root, fi tting lines or polynomials to the function and 
finding their roots as improved guess es  and with a little library  work, we can find about them 
in detail.  For our purposes, we can use a routin e developed by Prof. Beers for 10.34, and made 
available on the OpenCourseWare site (1).    The end result is that although we cannot solve our equations for T
6, T8, T9 in general, we can 
compute appropriate values for these CV in specific cases.  numerical differentiation
 
We can also obtain a numerical estimate of a derivative:  
()()
unchanged xx allj i j i
ji
j kx2x xyx xy
xy
+
  (3-8) 
 
where x should be small enough to approximate the slope of y i but not so small that numerical 
round-off errors dominate.  Each determination of y i in (3-8) is done by numerical root-finding.</text>
        </slide>
        <slide>
          <slideno>4</slideno>
          <text>Fall 2004 ICE Topics: Process Control by Design  10.492 
 Lecture Notes 3: the Heat Exch anger Network for Heat Recovery 
revised 2004 Dec 17  5  
In the rating case, we are seeking intermediate  and outlet temperatures.  We can arrange the 6 
nonlinear equations, which are imp licit in our 6 unknown temperatur es, to equal zero.  We can 
then use a numerical root-finding scheme to calcula te the temperatures that satisfy the equations.  
We will discuss root-finding in further detail below.  In summary, we can calculate steady-state perfor mance as required, so that we can arrive at a 
design for our network.  Next, we must c onsider if the network will be operable. 
 
before we proceed, recall what we learned from the shower process 
Our intention is to use RGA and DC to scre en the heat exchanger network for potential 
controllability problems.   Le t us compare our plan with our  experience from the shower: 
 
Shower HX network 
Compute reference conditions from steady-state equations 
The output variables T and F were explicitly calculated from 1 linear and 1 nonlinear equation. The output variables are implicit within 6 nonlinear equations.  An iteration scheme is necessary to calculate the reference stea dy state.  The result will 
be numbers, not a mathematical expression that shows dependencies. 
Classify the variables 
2 CV, 2 DV, 2 MV. With DV and MV specified, we have 2 equations to calculate CV. 3 CV (T
6, T8, T9), 4 DV (W 1, T1, T2, T3), 2 MV (W 2, 
W3), and 3 IV  intermediate variables  (T 4, T5, T7).  
With DV and MV specified, we have 6 equations to eliminate IV and calculate CV. 
Derive a linear system approximation to the equation set: 
'
dd'
m m'xP xPy +=       ( or if scaled, *'
d*
d*'
m*
m*'xP xP y += ) 
Taylor series used to obtain analytical 
expressions for the elements in P m and P d.We decline to exert the effort required to differentiate the 6 equa tions and solve for y
.  
Instead, we will calculate the elements in P m and P d 
by numerical differentiation.  However, we will forego the insight that a mathematical expression 
could convey.  
Obtain RGA and DC from P m and P d. 
RGA and DC were mathematical expressions, from which we could both infer system behavior and calculate specific cases. RGA and DC will be numbers.  We must calculate various cases and hope to infer system behavior. 
 
what we gain and lose by these numerical approximations 
We avoid all the algebra of writing Taylor series, but we get only a matrix of numbers.  With the 
analytical solution, we package th e entire system behavior into a mathematical expression, which 
we can use to understand its behavior.  With the numerical procedure, we must run multiple cases, and then compare tables of numbers, to sense how the system will operate.</text>
        </slide>
        <slide>
          <slideno>1</slideno>
          <text>Fall 2004 ICE Topics: Process Control by Design  10.492 
 Lecture Notes 3: the Heat Exch anger Network for Heat Recovery 
revised 2004 Dec 17  2 they are disturbance variables  (system inputs that we must accep t as they come).  Similarly, T 2 
and T 3 are determined by the suppliers of these streams,  so they are also disturbance variables.   
 
We cannot exert control over the outlet temperatures unless we have some inputs to use as 
manipulated variables ; these must be W 2 and W 3.   Why should W 2 and W 3 be ours to 
manipulate and W 1 not, if they are all received streams?   Perhaps flows W 2 and W 3 are drawn 
from some larger supply, so that  our calling for more or less of  these streams at any time does 
not badly affect either the source or the destin ation of these streams.  (If we should not be 
manipulating these streams, then we cannot expect  to exert the control we desi re on the outlet 
temperatures, and we had better seek another heat integration scheme.) 
 There remain temperatures T
4, T5, and T 7, which cannot be directly manipulated, are not input 
disturbances, but are not to be controlled.  We classify these as intermediate variables   they 
depend on inputs, and they either affect outputs or are themselves uncontrolled outputs of the 
system.  Our shower process in Lecture No tes 1 and 2 was simple enough to have no 
intermediate variables, but we encounter them in most cases.  
we write material and energy balances for steady-state operation 
Wait.  We have been talking about disturbances  and control and changing  stream flow rates  
how can we be content with a steady-state balance?   
 At this stage of design, we are simply not ready to quantify transient beha vior.  Our job is to 
specify a suitable reference operating condition a nd size the heat exchange rs appropriately, and 
that requires a steady state desc ription, such as we would have from a steady-state process 
simulator.  We will use the RGA (Relative Gain Array) and DC (Disturbance Cost) to examine 
the merits of various control loops we might cons ider, and a steady-state m odel will be sufficient 
for that.  The steady state material balances are true, but not informative, so we shall omit them.  A steady-state energy balance on the cold st ream in a heat exchanger will be  
 
 =+out
refin
refT
TpT
Tp dTC WQ dTC W  (3-1) 
 
The enthalpy of the stream is calculated from a thermodynamic reference temperature T ref, and 
the heat capacity C p may vary with temperature.  Q is the heat duty of the exchanger, supplied to 
stream W through the heat transfer surface.  Combining the inlet and outlet streams, 
 
()in out pT
Tp
T TCW    dTC WQout
in
 == (3-2) 
 where the heat capacity has been averaged ove r the temperature interval.  For our purposes 
(learning about operability screening tools to be used in preliminary-stage design) we will make 
matters simple and assume that C
p does not vary with temperature.</text>
        </slide>
        <slide>
          <slideno>10</slideno>
          <text>Fall 2004 ICE Topics: Process Control by Design  10.492 
 Lecture Notes 3: the Heat Exch anger Network for Heat Recovery 
revised 2004 Dec 17  11  
we continue the example to compute DC 
If we were designing this pr ocess, of course, we would  find out about other considerations 
besides the RGA, as well as the information n eeded to set suitable scaling ranges for all our 
variables.  Because our purpose is to learn scre ening tools, however, we are entitled to make 
some simplifying assumptions about these details.  For example, we will assume that all 
temperatures are scaled to 1 0C around the reference condition and flows are scaled between 
zero and twice the reference valu e.   With these simple scaling ranges, we calculate the 
dimensionless matrices P m* and P d*  
 
Pmstar = 
   -0.5458   -2.2296 
   -0.2104   -5.2273 
   -2.6633   -2.3699 
 Pdstar = 
    4.9606    0.1114    0.3487    0.5399 
    2.7687    0.7906    0.1344    0.0750 
    4.7062    0.3142    0.6031    0.0827 
 
For further calculations, we omit the first row of each matrix, because we have chosen to control 
T8 and T 9, and their dependency is given by rows 2 and 3. 
 We calculate DC as a function of the disturbance vector x
d*.  We check cases in which flow W 1 
varies from 50% to 150% of its reference value.  That is, W 1* takes values of -0.25, 0, and 0.25.  
Each temperature varies a full 10C, so that each scaled deviation variable takes values of -0.5, 
0, and 0.5.  This means 81 calculations of DC .  We are concerned with the largest values: 
 
DC W1* T1* T2* T3* W2* W3* 
    0.4706   -0.2500         0   -0.5000   -0.5000   -0.4510   -0.1343 
    0.4706    0.2500         0    0.5000    0.5000    0.4510    0.1343     0.4784   -0.2500   -0.5000   -0.5000         0   -0.4329   -0.2035     0.4784    0.2500    0.5000    0.5000         0    0.4329    0.2035 
    0.4898   -0.2500   -0.5000   -0.5000   -0.5000   -0.4424   -0.2103 
    0.4898    0.2500    0.5000    0.5000    0.5000    0.4424    0.2103 
 
The maximum occurs symmetrically: when the flow and all temperatures decrease, or increase.  
Notice that both W2*  and W3*  are below their extreme values ( 0.5) so that we have sufficient 
MV capacity to overcome the anticipated disturbances.  
before we contemplated heat recovery, we woul d have controlled all three temperatures 
We should not give up control too easily.  The pr oblem at present is that we have two MV for 
three CV.  Here are two schemes for creating another MV:  adjustable bypass stream
 
As in Seider et al (3), we divert some of stream W 3 past HX103.  We now can manipulate W 2, 
W3, and the bypass fraction , so we can control all three variables.  However, because we are</text>
        </slide>
        <slide>
          <slideno>9</slideno>
          <text>Fall 2004 ICE Topics: Process Control by Design  10.492 
 Lecture Notes 3: the Heat Exch anger Network for Heat Recovery 
revised 2004 Dec 17  10 control T 8 and T 9 
RGA = 
   -0.0371    1.0371 
    1.0371   -0.0371 
 
The selection of which two variables to contro l may depend on other considerations  safety 
considerations, impact on the downstream processe s, likelihood of distur bances affecting the 
various CV  but if there are no other compelling grounds, the RGA suggests that we pair T 8 
with W 3 and T 9 with W 2.  These two loops are predicted to sh ow the least inter action; that is, 
adjustments in one loop should not  strongly disturb the other. 
 
W1
W2 T2T6T5T4T1
T8T9 T7
E101 E102 E103
W3 T3W1
W2 T2T6T5T4T1
T8T9 T7
E101 E102 E103
W3 T3
 
 Notice that each RGA shows (by negative elements) one pairing to be unstabl e.  It would require 
dynamic simulation to explore this quantitatively, but we can see th e outlines of the behavior by 
imagining the effects of a step disturbance in one input.  For example, suppose that we pair T
8 
with W 2 and T 9 with W 3.   
 
W1
W2 T2T6T5T4T1
T8T9 T7
E101 E102 E103
W3 T3W1
W2 T2T6T5T4T1
T8T9 T7
E101 E102 E103
W3 T3
 NOT RECOMMENDED
 
 We imagine an initial steady-state at the referen ce conditions, and we  disturb this by a small step 
increase in temperature T
2.  This will increase outlet temperature T 9.  The controller tries to 
counter an increase in T 9 by increasing W 3, so that stream W 1 will approach HX102 cooler.  
Increasing W 3, however, also tends to reduce T 8.  The T 8 controller tries to increase T 8 by 
heating the W 1 stream approaching HX103.  It does this by decreasing W 2.  Decreasing W 2, 
however, tends to increase outlet temperature T 9, thus reinforcing the initial disturbance.  The 
likely outcome is maximum W 3 and minimum W 2, far from the desired reference condition.</text>
        </slide>
        <slide>
          <slideno>6</slideno>
          <text>Fall 2004 ICE Topics: Process Control by Design  10.492 
 Lecture Notes 3: the Heat Exch anger Network for Heat Recovery 
revised 2004 Dec 17  7 linearization  
Any one of our controlled  variables (call it y i) is related to the i nput (manipulated and 
disturbance) variables x m and x d through the nonlin ear equation set F .  We use the Taylor series 
to approximate this relationship as 
 
() () () K K +++++=r1d 1d
r1di
r2m 2m
r2mi
r1m 1m
r1mi
ir i x xxyx xxyx xxyyy  (3-9) 
 or in deviation variables  
K K ++++='
1d
r1di '
2m
r2mi '
1m
r1mi '
i xxyxxyxxyy  (3-10) 
 
When we apply this general form to each contro lled variable, we can collect them into the 
standard linear system form 
 
'
dd'
m m'xP xPy +=  (3-11) 
 
where we see that matrices P m and P d are ensembles of the Taylor series partial derivatives, 
evaluated at the reference conditi on.  Writing (3-11) specifically fo r the heat exchanger network, 
 


















+











=



'
3'
2'
1'
1
r39
r29
r19
r19r38
r28
r18
r18r36
r26
r16
r16
'
3'
2
r39
r29r38
r28r36
r26
'
9'
8'
6
TTTW
TT
TT
TT
WTTT
TT
TT
WTTT
TT
TT
WT
WW
WT
WTWT
WTWT
WT
TTT
 (3-12) 
 
Thus we assemble matrices Pm and P d directly by calculating numerical derivatives with (3-8).   
 putting it together to calculate the matrices
 
For example, we calculate the root of nonlinear system F  at W 2 = W 2r + W2, with all other input 
variables at reference conditions.  Then we calculate the root for W 2 = W 2r - W2, leaving the 
other inputs unchanged.  From these two steady-st ate conditions, we obtain the first column of 
matrix P m.  The other column is obtaine d similarly by finding roots at W 3 = W 3r  W3, leaving 
W2 and the other inputs at the reference values.  P d follows in a similar manner. 
 scaling variables using matrix notation
 
We express each vector of variable s in terms of scaled variables,  and then separate the scaling 
ranges into a separate matrix.  For example,</text>
        </slide>
        <slide>
          <slideno>11</slideno>
          <text>Fall 2004 ICE Topics: Process Control by Design  10.492 
 Lecture Notes 3: the Heat Exch anger Network for Heat Recovery 
revised 2004 Dec 17  12 removing part of W 3 from being heated, we may require la rger heat exchangers to produce the 
desired output temperatures.  Thus our new operating capability comes at a capital cost. 
 
W1
W2 T2T6T5T4T1
T8T9T7
E101 E102 E103
W3 T3W3
T7a
W1
W2 T2T6T5T4T1
T8T9T7
E101 E102 E103
W3 T3W3
T7a
 
 trim heat exchanger
 
We do part of our heating with a new heat exchanger, using a plant utility heating fluid.  We now 
can manipulate W 2, W 3, and the utility flow W u, so we can control all th ree variables.   Again, 
our new operating capability comes at a capital cost.  In this case, however, we may be able to reduce the other heat exchanger sizes somewhat.  
W1
W2 T2T6T5T4T1
T8T9 T7
E101 E102 E103
W3 T3T7a
E104
T11WuT10
W1
W2 T2T6T5T4T1
T8T9 T7
E101 E102 E103
W3 T3T7a
E104
T11WuT10
 
 
by now, we know the drill fo r analyzing these alternatives 
The first step is to update the process model to reflect the process changes.  For the bypass 
scheme, we must write M&amp;E balances over the mixing junction.  For the trim HX scheme, we 
need energy balances and a performance equation for the new heat exchanger.  We review our variable classi fication  CV is the same, but each scheme has a new MV and 
some new IV, as well.  For simplicity (we ha ve enough complication) we shall ignore any new 
DV that would be introduced, such as T
10.   
 We calculate new reference condi tions  that is, a new design.  Our original input and output 
specifications for the reference st ill apply, of course, but we must choose a new MV reference in 
each case.  That specification will affect the ot her heat exchanger sizes.  We will use the DC, 
calculated after the fact, to evaluate whether our design (bypa ss fraction, trim heat exchanger 
size) has the capability to overcome disturbances.</text>
        </slide>
        <slide>
          <slideno>7</slideno>
          <text>Fall 2004 ICE Topics: Process Control by Design  10.492 
 Lecture Notes 3: the Heat Exch anger Network for Heat Recovery 
revised 2004 Dec 17  8 *'
m m *'
3*'
2
32
3*'
32*'
2
'
3'
2 '
m xS
WW
W 00 W
W WW W
WWx =





=



=


=  (3-13) 
 
 Similar treatments are done for y and x d.  Substituting into the linear model, we find 
 
*'
ddd*'
m m m*'xSP xSP yS + =  (3-14) 
 where the scaling ranges for indivi dual controlled variables in y
 are collected into S , and so forth.  
We then isolate y* ; on performing the indicated matrix mu ltiplication, we obtain matrices P m* 
and P d*. 
 
*'
d*
d*'
m*
m*'
ddd1 *'
m m m1 *'
xP xP      xSPS xSPS y
+=+ = 
 (3-15) 
 
In Matlab, we should use left divisi on instead of the matrix inverse: 
 
Pmstar = S\Pm*Sm;  % = inv(S)*Pm*Sm 
Pdstar = S\Pd*Sd;  % = inv(S)*Pd*Sd 
 
dont get lost 
If you find yourself feeling bewild ered by these various operations, return to the side-by-side 
comparison above and make sure that you understand the overall procedure for turning a 
nonlinear model into a linear system approximati on.  Then review the tools again with the 
purpose of each step firmly in mind. 
 
we create a Matlab program to perform these calculations 
We base our calculations on Prof. Beers code  reduced_Newton.m, which will calculate the 
vector of roots of a set of nonlinear algebraic equations.  reduced_Newton requires that we write 
a routine called calc_f.m to cont ain our six equations; given a vector  of CV and IV values, calc_f 
returns the vector computed from the six equa tions.  If it returns zeroes, we know that the 
supplied vector was a root.  We write the main routine to set the reference conditions, calculate 
matrices P m* and P d*, and compute the RGA and DC. 
 From our shower work, we recall  
() ()= = T1*
m*
mT1
m m P P P P RGA  (3-16) 
 
and  
()*'
d*
d1*
m xPP norm DC=  (3-17)</text>
        </slide>
        <slide>
          <slideno>2</slideno>
          <text>Fall 2004 ICE Topics: Process Control by Design  10.492 
 Lecture Notes 3: the Heat Exch anger Network for Heat Recovery 
revised 2004 Dec 17  3 Thus far we have energy balances  and physical properties; we also  need a performance model of 
the heat exchanger.  We will use 
 
( )( )
()
()in,cold out,hotout,cold in,hotin,cold out,hot out,cold in,hot
T TT TlnT T T TUAQ
=  (3-3) 
 
in which we will neglect how the overall coe fficient U varies with operating conditions.  
 
the equations in summary 
HX101  
() ()
()
()7 48 17 4 8 1
11 183p3 1 73p31 41p1 11p1
TTTTlnTT TTAU Q whereTCW QTCW0QTCWTCW 0
=+ =+ +=
 (3-4) 
 
HX102  
() ()
()
()2 59 42 5 9 4
2 2 292p2 2 22p22 51p1 41p1
TTTTlnTT TTAU Q whereTCW QTCW0QTCWTCW 0
=+ =+ +=
 (3-5) 
 
HX103  
() ()
()
()3 67 53 6 7 5
33 373p3 3 33p33 61p1 51p1
TTTTlnTT TTAU Q whereTCW QTCW0QTCWTCW 0
=+ =+ +=
 (3-6) 
 
if we had been using a steady-state proce ss simulator we would not see the equations 
Still, they would be something like those we have written.  The temperature dependence of 
physical properties would be accounted for, and perhaps the heat exchanger model would be 
more elaborate, but they woul d feature the combination of the-energy-must-balance  and how- 
the-equipment-performs  that we see above. 
 
remember, these are steady-state equations! 
In writing balances for the shower process, we  set the accumulation terms to zero because that 
was a reasonable approximation to process behavi or.  Here, we have done no such thing  we 
have set the accumulation terms to zero because we are looking only at steady state.</text>
        </slide>
        <slide>
          <slideno>3</slideno>
          <text>Fall 2004 ICE Topics: Process Control by Design  10.492 
 Lecture Notes 3: the Heat Exch anger Network for Heat Recovery 
revised 2004 Dec 17  4 However, steady-state does not mean static!  Suppose we define a reference state for all the 
variables.  Of course these must satisfy the equa tion set.  Then we change one of the inputs, say 
temperature T 1.  For some period of time following, our equation set will not apply, because the 
disturbance in T 1 changes the accumulation of energy in th e system and variables are changing in 
time.  Ultimately, however, we expect the system to settle down to a new steady state whose 
variables are more or less differe nt from the reference values, because of the effect of variable 
T1.  This steady state would be described by (3-4) through (3-6). 
 
we use the equations for the design case, in  which our objective is to choose the areas 
We want to find out how large the heat exchangers  must be to operate at the reference condition, 
and what manipulated variable flow rates we should supply.  This means we specify system 
parameters like C p and U, pin down disturbance variables at their reference values, and specify 
the output variables to describe the system perf ormance that we want.  Then we calculate the 
required heat exchanger areas a nd manipulated variables.  Notice, however, that two of the 
intermediate variables must be specified, as well.  Notice the subscript r, which indicates the reference condition, or design case.  design case 
specify:  
C
p1, Cp2, Cp3, U1, U2, U3 
W1r, T1r, T2r, T3r 
T4r, T5r, T6r, T8r, T9r calculate: A
1, A2, A3 
Q1r, Q2r, Q3r 
W2r, W 3r, T7r 
 
we use the equations for the rating case, in which our objective is to calculate outputs 
After arriving at a design, we are interested in how it operates under different conditions.  Now 
the heat exchanger areas are fixed; we specify all inputs and calculate intermediate and output 
variables.  In describing the rating case no subs cript is used, because the flow and temperature 
variables can take any value that satisfies the energy balance and performance equations. 
 
rating case 
specify:  
Cp1, Cp2, Cp3, U1, U2, U3 
A1, A2, A3 
W1, W 2, W 3, T1, T2, T3 calculate: Q
1, Q2, Q3 
T4, T5, T6 
T7, T8, T9 
 
we calculate either steady-state case by  specifying 15 quantities and calculating 9 
Ideally, we would solve the 9 e quations for the 9 unknowns.  We can quickly eliminate the 3 heat 
duties, but we are then left with 6 nonlinear equati ons that are implicit in the temperatures.  It is 
unlikely, therefore, that we will be able to is olate all desired unknown variables.  Hence, our 
calculation method will have to be iterativ e.  We will consider  two alternatives: 
 In the design case, we know most of the temp eratures (because we are specifying both inlet and 
outlet conditions), which makes it straightforward to  calculate the areas.  Hence we can vary the 
two manipulated variables and othe r temperatures to seek a combin ation of areas that we like.  
An example is given in HX network.xls.  It is important to represent al l three heat exchangers 
in the spreadsheet, so that all e quations are simultaneously satisfied.</text>
        </slide>
        <slide>
          <slideno>0</slideno>
          <text>Fall 2004 ICE Topics: Process Control by Design  10.492 
 Lecture Notes 3: the Heat Exch anger Network for Heat Recovery 
revised 2004 Dec 17 Dr. Barry S. Johnston, Copyright 2004.  1  
chemical plant designs use heat integration to reduce energy costs 
Suppose you have a hot process stream that n eeds cooling.  Perhaps you could use a utility 
stream, such as cooling water.  The energy tr ansferred to the cooling water would then be 
discarded to the plant environment (via cooli ng tower or river discharge).  Suppose, however, 
that you have another process stream that needs heating.  IF the desired enthalpy changes of the 
two process streams are similar, IF the temperat ure differences support pr actical heat transfer 
rates, IF there is no safety problem routing these streams through a common piece of equipment, 
IF the two streams are in reasonable proximity, etc., THEN it may pay to recover the energy of 
the hot stream into the cold one, and thus save utility costs. 
 
saving utility costs is good, but operation becomes more complicated 
We have given up flexibility by tying two proces s streams together; it may be that starting up, 
shutting down, or performing maintena nce will affect larg er portions of the plant.  Furthermore, 
operating disturbances that affect  one process stream may now propa gate into the other.  More 
complicated plant structures motivate more sophis ticated process control to  cope with these new 
problems. 
 
use steady-state process simulators for flowsheet development 
Codes such as Aspen Plus, Chemcad, and Hysys ar e routinely used to de velop chemical process 
flowsheets.  They calculate the thermodynamic st ate of each stream in the flowsheet.  These 
stream properties must, of course, satisfy the steady-state material and energy balances.  To 
complete the calculations requires models for pe rformance of the flowsheet equipment, as well 
as physical properties.   
 We will not use these tools in this module, but we will remain mindful of how they would be 
used.  In what follows, therefore, we can antici pate (1) writing material  and energy balances (2) 
describing the performance of equipment (3) using physical property data.    
 
we present an example of heat inte gration and classify the variables 
Consider the following heat recovery network, based on an example presented by McAvoy (2): 
 
W1
W2 T2T6T5T4T1
T8T9 T7
E101 E102 E103
W3 T3W1
W2 T2T6T5T4T1
T8T9 T7
E101 E102 E103
W3 T3 
 
To rationalize this example, imagine that we care  about all the exit temper atures  this would be 
the case if we were processing each stream separate ly in heat exchangers with utility streams.  
Thus T 6, T8, and T 9 are classified as controlled variables  (system outputs that we wish to 
maintain at a target value).  If  the primary purpose of the network is to cool stream 1, then mass 
flow W 1 and inlet temperature T 1 are regarded as determined by another process; for our purpose</text>
        </slide>
      </slides>
      <videos/>
    </lecture>
    <lecture>
      <lecture_title>Proportional Control Algorithm, Dynamic Simulation</lecture_title>
      <lecture_pdf_url>https://ocw.mit.edu/courses/10-492-1-integrated-chemical-engineering-topics-i-process-control-by-design-fall-2004/resources/notes_2_simulatn/</lecture_pdf_url>
      <lectureno>6</lectureno>
      <slides>
        <slide>
          <slideno>1</slideno>
          <text>Fall 2004 ICE Topics: Process Control by Design  10.492 
 Lecture Notes 2: Simulating the Shower Process 
revised 2004 Dec 16  2 distinguishing F sp from F r allows us to easily describe set point changes  that is, moving the 
process from one condition to another unde r the supervision of  the controller. 
 
the error can be scaled 
When we divide the error by the operating range  for flow, we obtain a dimensionless error. 
 
*' *'
spF *
F F FF==  (2-4) 
 
If we pair CV flow and MV hot water, the c ontroller algorithm (2-2) is now written in these 
dimensionless terms. 
 
*
F*
CF*'
hK F=  (2-5) 
 
Fh* the scaled deviat ion hot water flow 
KCF* dimensionless gain (+, so that an increase in F will decrease F h) 
 The magnitude of the gain K
CF* may be increased to provide more  aggressive controller action.  
For example, a gain of 1 means that a 10% e rror will motivate a 10% change in manipulated 
variable.  Increasing the gain to 2 produces a 20%  change in MV.  Notice that the bias in (2-2) 
has been absorbed into the devi ation variables.  When error F* is zero, no change is made to F h, 
so F h* is zero. 
 
we treat the temperature controller the same way 
We will control T by manipulating the cold water flow.  
*' *'
spT *
T T TT==  (2-6) 
 
*
T*
CT*'
cK F=  (2-7) 
 
In contrast to the flow controller, K CT* should be negative, so that the controller will respond to 
an increase in temperature ( T* &lt; 0) by increasing the cold flow F c. 
 
what is a controller anyway? 
The controller is some device that receives the error input an d puts out a direction to the 
manipulated variable.  Often, it is a computer th at runs a control program; the program computes 
the MV value at frequent intervals, and the resu lting number is transmitted to a transducer that 
moves a valve stem.  The controller can instead be a mechanical device  a common example is 
the lever mechanism in the flush toilet.  Whatever the hardware, its job is to execute the algorithm, and if the device and the math are re asonably close, we can describe its behavior 
mathematically.</text>
        </slide>
        <slide>
          <slideno>3</slideno>
          <text>Fall 2004 ICE Topics: Process Control by Design  10.492 
 Lecture Notes 2: Simulating the Shower Process 
revised 2004 Dec 16  4  
These interactions may not in themselves be ba d.  However, looking at the equations in more 
detail will show that a persistent change in either inlet temperature  such that T h* or T c* remains 
non-zero  will cause both F* and T* to remain non-zero.  Thus our controllers are not satisfying 
our original operating obj ectives of keeping the shower at the set point! 
 This inability to return to set point is a propert y of proportional control; it is known as offset.  
Offset also occurs for a change in set point: the contro lled variables cannot attain the new desired 
values.  Offset can be reduced by increasing the cont roller gain.  It can be eliminated by a more 
sophisticated controller algorithm, but that is the subject of 10.450. 
 This is a good time to recall th at our model regards all input changes as being immediately 
transmitted to the output.  Hence, equations (2-10)  through (2-12) can describe a steady state, but 
they also describe time-varying behavior, even though time does not appear explicitly. 
 
always try out a complicated model on simple cases 
We can learn more about our system by exam ining how the equations simplify for limiting 
conditions.    no temperature control  turn K
CT* down to zero (open the temperature loop)  
The material balance (2-10) becomes  
*'
sp
*
CFh*
CFh
*'F
KFF1KFF
F
+
=  (2-13) 
 
Without the temperature controller, there is no m echanism for temperature disturbances to affect 
the flow.  A set point change will never be fully achieved (offset), but increasing the gain K CF* 
makes the approach closer.  The energy balance (2-11) becomes 
 
*'
c
rcr c *'
h
rhr h *'
sp
*
CFh*
CF
rr hr h
*'TFF
TTTFF
TTF
KFF1KFT T
TF
T++
+

=  (2-14) 
 
Temperature disturbances affect the shower te mperature without interference from the flow 
controller.  A set point change in shower flow  will affect the temperature by an amount that 
increases with the controller gain.  Hence, attempting to reduce flow offset will increasingly disturb temperature.  no flow control  turn K
CF* down to zero (open the flow loop)  
The balances become</text>
        </slide>
        <slide>
          <slideno>0</slideno>
          <text>Fall 2004 ICE Topics: Process Control by Design  10.492 
 Lecture Notes 2: Simulating the Shower Process 
revised 2004 Dec 16 Dr. Barry S. Johnston, Copyright 2004. 1  
the shower process is simple enough that we can simulate its operation 
Over the past decade our tools for simulating processes have greatly improved.  In particular, we 
can predict how the process will behave unde r dynamic conditions: startup, disturbance, and 
shutdown.  Dynamic simulation can aid in specifyi ng the control scheme and may catch potential 
operating problems.    For the shower, we do not need a complex comput er code  we can derive and solve a decent 
equation set by hand.  We will do th is simulation to illustrate 
 a simple control algorithm 
 how the process behavior was i ndicated by the RGA and DC tools 
 Simulation thus allows us to check the efficacy of our screening tools. 
 
first we need to talk some more about process control 
Recall how we defined feedback control: measurem ent of CV used to motivate a change in MV 
to keep CV at set point.  To put this into practice, we must assert some control algorithm, that is, 
a way to calculate how much to move  MV.  We begin by defining error: 
 
)t(CV SP)t(=  (2-1) 
 
Error is the difference between the desired valu e of CV, called the set point SP, and CV.  Of 
course, CV might wander around with  passing time, and so error would, as well.  If CV is at the 
set point, the error is zero; should CV be distur bed, the error might be positive or negative. The 
error is the input to th e control algorithm.   
 
the simple Proportional algorithm for a controller  
An intuitively appealing algorithm is to ma ke the response proportional to the error. 
 
)t(K B)t(MVC C+=  (2-2) 
 
MV the manipulated variable, which may vary in time B
C the value of MV when error is zero; known as the bias 
KC adjustable controller gain (+ or -) 
 
we apply the proportional controller to our process 
Start with flow control.   Call the set point F sp.  Then the error in the flow is 
 
' '
spr r spsp F
F F      FFF F      F F
=+==
 (2-3) 
 
By introducing our reference value F r into the definition, we see that the error is also the 
difference between two deviation variables.  In many cases, of course, we would take the set 
point value F sp to be the same as our re ference value, so that F sp is identically zero.  However,</text>
        </slide>
        <slide>
          <slideno>2</slideno>
          <text>Fall 2004 ICE Topics: Process Control by Design  10.492 
 Lecture Notes 2: Simulating the Shower Process 
revised 2004 Dec 16  3 the control algorithm becomes part of the math model of the system 
We have a linear system model of the shower, an d we propose to install controllers.  Thus the 
controller equations (2-5) and (2-7) must be introduced into the M&amp;EB equations.  They 
eliminate the manipulated variables, resulting in  
() ()*' *'
sp*
CTc *' *'
sp*
CFh *'T T KFFF F KFFF +=  (2-8) 
 
() ()*'
cc
rcr *'
hh
rhr *' *'
sp*
CTc
rr cr *' *'
sp*
CFh
rr hr *'TTT
FFTTT
FFT T KTF
FT TF F KTF
FT TT++

+

=  (2-9) 
 
 Now we have some rearrangement to do: we must  express these two equations so that the outputs 
(F
*  T*) are functions of i nputs (disturbances T h*  Tc*  and set points F sp*  Tsp*).  We can do this 
by  
 solving the MB (2-8) for F* 
 substituting F* into the EB (2-9) and solving that for T* 
 substituting T* back into the MB and solving again for F* 
 
the result isnt pretty 
 
()
D1
T KFF
TT
FFT KFF
TT
FFT KFFF T T KKF1
TF
FFKFF
F
*'
c*
CT
rcr c c *'
h*
CT
rhr h c*'
sp*
CTc *'
sp hr cr*
CT*
CF
rh c *
CFh
*'









+


+

+

+
=  (2-10) 
 
D1
T KFF1FF
TTT KFF1FF
TTT KKFT T
TF
FFKFT T
TFF KFT T
TF
T
*'
c*
CFh
rcr c *'
h*
CFh
rhr h*'
sp*
CT*
CF
rhr cr h c *
CT
rr cr c *'
sp*
CF
rr hr h
*'










++



++
 

+
+


=  (2-11) 
 
where  
() ()hr cr*
CT*
CF
rh c
r cr*
CT
rc *
CFhT T KKF1
TF
FFT T KF1
TFKFF1D 
+++=  (2-12) 
 
these equations represent a different syste m: the original piping plus controllers 
That is why they are more complicated than our  original M&amp;EB.  The first thing we notice, 
perhaps, is that temperature disturbances affect the flow rate!  Of course, this is due to the 
feedback structure, which begins turning valves  when either the flow or temperature departs 
from set point.  We notice, as well, that chan ging either set point affects both controlled 
variables.</text>
        </slide>
        <slide>
          <slideno>5</slideno>
          <text>Fall 2004 ICE Topics: Process Control by Design  10.492 
 Lecture Notes 2: Simulating the Shower Process 
revised 2004 Dec 16  6 *'
h
*
CT
rr cr ch
*'
sp
*
CT
rr cr c*
CT
rr cr c
*'T
KFT T
TF1TT
T
KFT T
TF1KFT T
TF
T
+
+
+

=  (2-21) 
 
The flow (2-20) can be made to approach set point by increasing K CF*.  Increasing K CF* also 
helps to suppress the effects of temperature set point and disturbance changes on flow.  The flow 
controller gain has no effect on the ou tlet temperature (2-21).  Increasing K CT* improves 
temperature set point response and suppr esses the effect of disturbances. 
 Reducing loop interaction, as directed by the RGA results, certainly improves the control 
response!  In this limiting case, we seem to be ab le to increase controller gains arbitrarily without 
ill effect.  If we are sufficiently curious,  we can check out the opposite limiting case. 
 
does the simulation bear  out our DC predictions? 
DC said that the most difficult disturbance comb ination to overcome was a change by both inlet 
temperatures in the same direc tion.  Of course, by using propor tional control in our simulation, 
we have allowed offset to occur in the controlle d variables.  By having offset, we violate the 
assumption of perfect control that we used to derive DC.  Even so, we should be able to examine 
what the simulation predicts for disturbances.  We  assume that set points are unchanged, so that 
the set point deviation variables are zero.  From (2-10) through (2-12) the disturbance responses 
are  
D1T KFF
TT
FFT KFF
TT
FFF*'
c*
CT
rcr c c *'
h*
CT
rhr h c *'





+


=  (2-22) 
 
D1T KFF1FF
TTT KFF1FF
TTT*'
c*
CFh
rcr c *'
h*
CFh
rhr h *'






++



+=  (2-23) 
 
where  
() ()hr cr*
CT*
CF
rh c
r cr*
CT
rc *
CFhT T KKF1
TF
FFT T KF1
TFKFF1D 
+++=  (2-24) 
 
If T h* = T c* (whether positive or negative) 
 
[]crc hrh*'
h*
CT
rc *'FT FT TDK
F1
T1
FFF +=  (2-25) 
 
[]crc hrh*'
h *
CFh
r*'FT FTDTKFF1F1
T1T +


+=  (2-26)</text>
        </slide>
        <slide>
          <slideno>7</slideno>
          <text>Fall 2004 ICE Topics: Process Control by Design  10.492 
 Lecture Notes 2: Simulating the Shower Process 
revised 2004 Dec 16  8  Actually, the RGA has shown us that loop intera ction will always be present for realistic 
operating conditions.  Hence a better design would attack the in teraction problem 
directly.   
 
For example, we could redefine our manipulated  variables.  We add a total flow control 
valve, directed by the flow measurement.   Then we use a ratio controller to set hot and 
cold proportions.  The controller algorith ms are standard and non-specific to our 
particular process.  (Perhaps you have s een showers in which you set temperature by 
rotating a valve handle and set flow by adjust ing the shower nozzle.  There is usually 
insignificant interaction betw een the two manipulations.) 
 
F TF T FhTh
FcTcR
F TF T FhTh
FcTcR
F T FhTh
FcTcR
 
 
Alternatively, we could write a special-purpo se controller algorithm (it would surely 
include material and energy balance equa tions!) that would accept two measurement 
inputs and compute two valve sett ings.  Sometimes this extra e ffort in control design pays 
off in better process operation. 
 
F T FhTh
FcTcC
F TF T FhTh
FcTcC
F T
 
 
Thus we can do better than the simple tw o-loop control scheme we proposed in the 
beginning.  The RGA has allowed us to recogn ize this in the preliminary design stage, 
before we committed too much money on something that wouldnt work. 
 
 The shower is a simple system, so we coul d analyze the whole problem with math.  We 
will next go to a more complicated system fo r which analytic solutions are impractical, 
even if possible.  However, we will follow the same design scheme, with the same intentions, even if we use different tools to get the job done. 
 
nomenclature 
BC bias; the value of MV when the cont rolled variable is at its set point</text>
        </slide>
        <slide>
          <slideno>6</slideno>
          <text>Fall 2004 ICE Topics: Process Control by Design  10.492 
 Lecture Notes 2: Simulating the Shower Process 
revised 2004 Dec 16  7 If T h* = -T c*  
 
[]crc hrh*'
h*
CT
rc *'FT FT TDK
F1
T1
FFF =  (2-27) 
 
[]crc hrh*'
h *
CFh
r*'FT FTDTKFF1F1
T1T 


+=  (2-28) 
 
For the first case, in which disturbances move in  the same direction, the term in brackets is 
larger, which implies a larger offset in the controlled variables.  Thus the case identified by DC as the most costly to mitigate also  shows the worst control response. 
 
is there a best design to propose? 
The real shower will have some degree of in teraction between the l oops, so that cavalier 
increases in controller gain are to  be avoided.  Probably the easi est way to answer this question 
(when we are not at a limiting case) is to comput e numerical predictions from the equations over 
a domain of realistic conditions.  Perhaps we can find gain settings that allow two controllers to 
maintain conditions at better offsets than would either controller acting alone.  The spreadsheet 
model shower controllability analysis.x ls demonstrates these computations. 
 
lets review what we have done, as  a guide to designing a process 
 We began with a process scheme for a shower, which we sketched out as a process flow 
diagram.   
 We made material and ener gy balances.  This allowed us to compute steady state 
reference conditions.   
 Thinking about transients, we speci fied our control objectives.   
 We classified the variables into useful input  and output categories .  Specifically, we 
identified controlled, manipulat ed, and disturbance variables. 
 We simplified the material and energy balanc es by Taylor series linearization.  This 
allowed us to express our process behavior  using a standard linear system form. 
 
*'
d*
d*'
m*
m*'xP xP y +=  
 
 Using the linear system, we computed the RGA to explore pairing of CV and MV. 
 We also computed DC to  identify the most severe  disturbance conditions. 
 Upon choosing a control algorithm, we added c ontroller equations to  the system model 
and computed the system response under control. 
 
final message 
 The next step would be the detailed design  pipe sizes, and so forth  which will be 
beyond our scope.  Of course, we could have gone straight to de tailed design after 
computing the steady-state reference conditi ons.  However, some transient screening 
tools applied in the early stages may save  you from designing a fine-looking steady-state 
that would be an operating disaster.</text>
        </slide>
        <slide>
          <slideno>8</slideno>
          <text>Fall 2004 ICE Topics: Process Control by Design  10.492 
 Lecture Notes 2: Simulating the Shower Process 
revised 2004 Dec 16  9 D a constant denominator in several equations 
F volumetric flow rate K
C controller gain 
Pd matrix of gain coefficients for the disturbance variables 
Pm matrix of gain coefficients for the manipulated variables 
T temperature x
d vector of input variables into th e system, the disturbance variables 
xm vector of input variables into the system, the manipulated variables 
y vector of output variables from th e system, the controlled variables 
F the range over which flow  is expected to operate 
T the range over which temperat ure is expected to operate 
 error; the set point value minus the controlled variable value at any time 
 abbreviations
 
CV controlled variable, a syst em output that we wish to maintain at a set point value 
DC disturbance cost DV disturbance variabl e, a system input that we have no influence over 
MV manipulated variable, a system i nput that we may adjust for our purposes 
RGA relative gain array SP set point, the desired value of the controlled variable  subscripts
 
c cold water supply stream F pertaining to the flow controller h hot water supply stream r a reference operating cond ition around which we deri ve a linear approximation 
sp set point value of cont rolled variable F or T 
T pertaining to the temperature controller  superscripts
 
 indicates a deviation variab le; i.e., the physical variable minus a reference value 
* indicates a scaled variable; i.e., variab le has been divided by its operating range</text>
        </slide>
        <slide>
          <slideno>4</slideno>
          <text>Fall 2004 ICE Topics: Process Control by Design  10.492 
 Lecture Notes 2: Simulating the Shower Process 
revised 2004 Dec 16  5 D1T KFF
TT
FFT KFF
TT
FFT KFFF*'
c*
CT
rcr c c *'
h*
CT
rhr h c *'
sp*
CTc *'





+


+

=  (2-15) 
 
D1TFF
TTTFF
TTT KFT T
TFT*'
c
rcr c *'
h
rhr h *'
sp*
CT
rr cr c *'




+

+

=  (2-16) 
 
where  
()r cr*
CT
rcT T KF1
TF1D +=  (2-17) 
 
As controller gain is increased, the outlet te mperature is less affected by inlet temperature 
disturbances.  Correspondingly, temperature set point changes are more faithfully followed.  Once again, however, increased gain means that  the flow is increas ingly affected by both 
disturbances and temperature set point changes.  
does the simulation bear out our RGA predictions? 
The RGA said that our hot-flow-to-flow and cold -flow-to-temperature pa irings would be good if 
the flow were mostly hot, and bad if the flow were mostly cold.  Lets take the best case: the outlet flow at the reference condition is enti rely composed of hot inlet flow.  Thus 
 
0 F F F
cr hr r = =  (2-18) 
 
and   
hr rTT=  (2-19) 
 
Making these substitutions, we find  
*'
h
*
CT
rr cr c *
CFh*
CTh c*'
sp
*
CT
rr cr c *
CFh*
CTc
*'
sp
*
CFh*
CFh
*'
T
KFT T
TF1 KFF1KTT
FF
         T
KFT T
TF1 KFF1KFF
F
KFF1KFF
F



 
+
+

+


 
+
+
+
+
=
 (2-20)</text>
        </slide>
      </slides>
      <videos/>
    </lecture>
    <lecture>
      <lecture_title>Beyond the Scope &#8211; What These Methods Miss</lecture_title>
      <lecture_pdf_url>https://ocw.mit.edu/courses/10-492-1-integrated-chemical-engineering-topics-i-process-control-by-design-fall-2004/resources/note_4_last_topc/</lecture_pdf_url>
      <lectureno>17</lectureno>
      <slides>
        <slide>
          <slideno>0</slideno>
          <text>Fall 2004 ICE Topics: Process Control by Design  10.492 
 Lecture Notes 5: What lies beyond 
revised 2004 Dec 17 Dr. Barry S. Johnston, Copyright 2004.  1  
 
we should emphasize that our heat exchanger work has all been at steady state 
In approaching the heat exchanger network, we to ok the point of view th at early in design, we 
did only steady state calculations.  Thus we used steady-state energy balanc es to describe normal 
operation in the network.  We calculated the R GA and DC from a linear system approximation to 
these equations, and used it to make statements about controllability.  There is not a 
contradiction here, merely a simplification: RGA a nd DC tell us the results of disturbances that 
moved the operation from one steady- state to another.  To say a ny more about the time required 
to reach the new steady state, or the path followe d, or the effects of continuing disturbances, we 
must make a dynamic analysis.  Seider et al (3) show how the RGA and DC  may be extended to account for time-varying 
disturbances.  In particular, they show that the severity of control loop in teraction can vary with 
the frequency content (that is, the time-varying nature) of the input disturbance.  These topics are 
beyond our scope, but you should return to  them if you do this again for money. 
 
but heres a transient problem that we wouldnt have caught with the RGA: 
Kister (1) describes how trace components in a feed stream may accumulate to considerably 
higher concentrations in distilla tion towers.  Imagine a chemical species with lower volatility 
than the overhead components, so that the re ctifying section tends to wash it down, and higher 
volatility than the bottoms, so that the strippi ng section tends to push it up.  Such volatility 
behavior is exacerbated by the nonlinear compos ition dependence of the activity coefficients.  
With no place to go, the component tends to acc umulate in the tower, so that the tower 
undergoes a slow transient.  The transient may be  observed by a changing temperature profile as 
the composition profile varies in the tower. 
 
Control loops, whose mission is to maintain th e composition of the outlet streams, tend to 
prevent the component from leaving.  For exampl e, the rise in overhead temperature as the 
higher-boiling impurity approaches the top might  trigger an increase in reflux flow, thus 
suppressing the impurity.    The accumulation has some limit.  The component w ill either establish an exit flow to equal the 
inlet (a new steady state) or cau se conditions to exceed some hydraulic limit, which subsequently 
forces its removal.  In the first case, the interior concentration ri ses enough to deliver it to some 
outlet stream; if the control syst em does not object, it becomes a trace component of the product. 
 In the second case, the increased reflux or boilu p (in an attempt to suppress the component) or a 
change in physical properties due to the presen ce of the component (in some cases generating a 
second liquid phase) exceed the capab ilities of tray or packing to ha ndle the internal tower flows.  
The column floods and delivers the accumulated component in an upset to an exit stream.  
Observers in the control room will see surges in pressure drop and temperature.  Kister points out 
that these accumulation/upset cycles  show periods of hours to days. 
 Our RGA would not have caught th is problem during design.  Inst ead, the design engineer would 
need to scrutinize the proposed feed stream for the possibility of trace components.  Of course,</text>
        </slide>
        <slide>
          <slideno>1</slideno>
          <text>Fall 2004 ICE Topics: Process Control by Design  10.492 
 Lecture Notes 5: What lies beyond 
revised 2004 Dec 17  2 this is only one of many topics  about which the designer should  play what if?.  The design 
engineer cannot become complacent.  
life beyond design 
A component-accumulation proble m might arise in an operating plant long after the original 
design basis no longer applies.  Control, interac tion, and capacity limit problems might arise, as 
well.  We have presented RGA and DC as scr eening tools in the context of process design.  
However, they may also be useful as diagnosti c tools for engineers who are trying to improve 
existing processes.    Saletan (2) makes a useful division of engineer ing activity into three main areas: research, 
design, and operation.  Rather than  a linear progression from lab bench to plant, however, he 
arranges the three activities in to a triangular structure.  He  views the interaction between 
research and operation to be particularly fr uitful for successful pr ocess troubleshooting.  
Researchers, process designers, and plant engine ers all require access to technical tools, and 
engineers in any of these areas  benefit from knowing the respon sibilities, capabilities, and 
constraints of the other areas.    It is most feasible in a university lecture cour se to arrange activities th at resemble real design, 
and a laboratory course may indicate the flavor  of engineering resear ch.  Students should not 
thereby underestimate the challenges and reward s of applying their skills to operation and 
troubleshooting during their professional careers. 
 
the last message 
Chemical processes are wonderfully complex non linear systems.  Chemical engineers must be 
prepared to approach them at multiple levels, w ith a variety of tools, always looking to improve 
the analysis, but able to empl oy short-cut approximations when  needed.  Engineering judgment 
is developed by learning from your experien ces, your colleagues, and your mistakes.   
 May your careers be long, rewarding, and worthwhile.  
references 
(1) H. Kister, Component Trapping in Distil lation Towers: Causes, Symptoms and Cures, 
Chem Engr Progress
, August 2004. 
(2) D. Saletan, Creative Tr oubleshooting in the Chemical Process Industries , Chapman and 
Hall, 1994. 
(3) W. Seider, J. Seader,  and D. Le win, Product and Process Design Principles , 2nd ed, 
Wylie, 2004.</text>
        </slide>
      </slides>
      <videos/>
    </lecture>
    <lecture>
      <lecture_title>Overview, Aims of Course, Shower Process, Feedback Structure</lecture_title>
      <lecture_pdf_url>https://ocw.mit.edu/courses/10-492-1-integrated-chemical-engineering-topics-i-process-control-by-design-fall-2004/resources/notes_1_shower/</lecture_pdf_url>
      <lectureno>1</lectureno>
      <slides>
        <slide>
          <slideno>11</slideno>
          <text>Fall 2004 ICE Topics: Process Control by Design  10.492 
 Lecture Notes 1: Analyzing the Shower Process 
revised 2004 Dec 16  12 we introduce the Disturbance Cost to see if our manipulated variables are strong enough 
After we have used the RGA to guide our deploy ment of MV, we must confirm that they are 
strong enough to do the job.  Recall the a pproximate linear model of our system: 
 
*'
d*
d*'
m*
m*'xP xP y +=  (1-29) 
 
If control is perfect, all CV wi ll remain at set point, regard less of how the disturbances x d* vary.   
then y = 0.  Substitu ting into (1-29) 
 
*'
d*
d*'
pc,m*
m xP xP0 + =  (1-30) 
 
Achieving perfect control requires that the manipulated variables adjust to values x m,pc* that 
compensate for x d*.  This manipulative action must sati sfy the governing material and energy 
balances, so that 
 
*'
d*
d1*
m*'
pc,m xPP x=  (1-31) 
 If we view the change of a manipulated variable as the cost of responding  to a disturbance, we 
can summarize the overall cost of perfect cont rol by calculating the norm , or magnitude, of the 
x
m,pc* vector.  Lewin (in (3)) calls it the Disturbance Cost (DC). 
 
()*'
pc,mx norm DC=  (1-32) 
 
the standard caution about believing  too much in fancy-looking math 
We recognize that the linear model is accurate  only near the reference point, so that 
computations in which disturbance and manipul ated variables are pus hed to their maximum 
deviations are unreliable as quantitative meas ures.  However, for screening candidates during 
preliminary design, the DC offers an indication of controllability that may be sufficient to 
identify problems for further examination.  That is, if we do not like x m,pc*, we must reexamine 
our assumptions about x d*, reevaluate the scaling ranges we used for x m*, or alter the process 
(Pm* and P d*).   
 
we derive DC for our shower example,  obtaining an analytic expression 
To express DC for the s hower, we must invert P m* and multiply it by P d*.</text>
        </slide>
        <slide>
          <slideno>12</slideno>
          <text>Fall 2004 ICE Topics: Process Control by Design  10.492 
 Lecture Notes 1: Analyzing the Shower Process 
revised 2004 Dec 16  13 







 
=













 

=
cc
cr hrcr
ch
cr hrhrhc
cr hrcr
hh
cr hrhrc
rcr h
rhr
c cr hrr
c cr hrr hrh cr hrr
h cr hrcr r
*
d1*
m
FT
T TF
FT
T TFFT
T TF
FT
T TF
            TT
FF
TT
FF0 0
FT
T TF
FF
T TT TFT
T TF
FF
T TTT
PP
 (1-33) 
 
Then  





+=


=



 
ch
cr hr*'
cc cr*'
hh hr*'
c*'
h *
d1*
m *'
pc,c*'
pc,h
F1F1
T TTTF TTF         TTPPFF
 (1-34) 
 
To obtain DC, we take the norm of this vector.  
21
2
c2
h cr hr*'
cc cr*'
hh hr
*'
pc,c*'
pc,h
F1
F1
T TTTF TTF
FFnorm DC



+
 +=






=  (1-35) 
 
DC tells us which disturbance conditions are the worst 
DC is a function of the disturbance input.  We can see from (1-35) that the largest DC occurs 
when both cold and hot inlet temperatures change  in the same direction.  In such a case, the 
temperature controller must counter a change  in temperature by using a stream whose 
temperature has changed in the direction of th e disturbance.  By co ntrast, opposite-direction 
temperature changes are self-compensating a nd therefore not as costly to mitigate. 
 
It is useful to compute DC over the domain of  possible disturbances.  For illustration, we can 
assume that the reference value is in the mi ddle of the operating range for each disturbance 
variable, such that each scaled deviation variable  varies between -0.5 a nd 0.5.  Presuming that 
the disturbance variables may change independen tly, we should examine the extremes in all 
combinations.  (In an actual design, the refere nce values and operating ranges may not lead to 
this symmetric domain.)</text>
        </slide>
        <slide>
          <slideno>4</slideno>
          <text>Fall 2004 ICE Topics: Process Control by Design  10.492 
 Lecture Notes 1: Analyzing the Shower Process 
revised 2004 Dec 16  5 ()() ()
()() ()cr c
cr hrcr
cr c 2
cr hrcrcr hr hr
cr hrcrhr h
cr hrhr
hr h 2
cr hrcrcr hr hr
cr hrhr
cr hrcrcr hr hr
TTF FFFF
F FTF TF
F FTTTF FFFF
F FTF TF
F FT
F FTF TFT
++



++++++



++++++=
 (1-7) 
 
we introduce deviation variables to focu s on departure from desired conditions 
Deviation variables simplify the equations , as well as focus on the disturbances. 
 
c cr c h hr h rc cr c h hr h r
T T T T T T TTTF FF F F F FFF
+ + ++ + + (1-8) 
 
0FrF
t0FrF
t0F
t0F
t 
 
The reference condition is chosen to satisfy the st eady state M&amp;EB and to be the desired, or set 
point, condition.  Therefore, only four of the si x reference values can be independently chosen. 
 
cr hrcrcr hr hr
rcr hr r
F FTF TFTF FF
++=+=
 (1-9) 
 
We now substitute the deviation variables into the material balance (1-5), and simplify.  
c hc cr h hr rc h
FFFF FF FFFFFF
+=+++=++=
 (1-10) 
 Similarly for the energy balance (1-5),  
c
rcr
h
rhr
c
rr cr
h
rr hrTFFTFFFFT TFFT TT ++
+
=  (1-11)</text>
        </slide>
        <slide>
          <slideno>14</slideno>
          <text>Fall 2004 ICE Topics: Process Control by Design  10.492 
 Lecture Notes 1: Analyzing the Shower Process 
revised 2004 Dec 16  15 c*'
pc,c cr pc,c F F F F +=  (1-38) 
 
and substituting for the scaled  deviation variable, we find 
 
()
()cr hrc cr h hr
cr pc,cT TTF TF5.0F F++=  (1-39) 
 If this value ex ceeds the value F
c.max we had used in scaling F c, we cannot overcome the 45 
disturbance conditions with our present design.  (At least, ac cording to the linear system 
approximation to our original model, which is itse lf an approximation to the physical operation.  
We should pay attention to our models, but not believe them beyond their worth.) 
 
DC doesnt depend on the pairing of CV and MV 
DC is a consequence of the process model, that  is, the dependence of the output variables on the 
disturbance and manipulated inputs .  It assumes nothing about the way that control is actually 
conducted; it does assume that c ontrol has been effective, so th at a disturbance input has been 
compensated by a manipulated variable input to retu rn the output to set poi nt at steady state.  
Actually designing the controllers to do this is another topic. 
 
references 
(1) T. Marlin, Process Control , 2nd ed., McGraw-Hill, 2000. 
(2) T. McAvoy, Interaction Analysis , Instrument Societ y of America, 1983. 
(3) W. Seider, J. Seader,  and D. Le win, Product and Pro cess Design Principles , 2nd ed, 
Wylie, 2004. 
 
nomenclature 
Cp liquid specific heat 
f a nonlinear function of several independent variables F volumetric flow rate 
P
d matrix of gain coefficients for the disturbance variables 
Pm matrix of gain coefficients for the manipulated variables 
T temperature 
Tref thermodynamic reference temperature for enthalpy 
V volume of the piping system x
1, x2 independent variables  
xd vector of input variables into th e system, the disturbance variables 
xm vector of input variables into the system, the manipulated variables 
y vector of output variables from th e system, the controlled variables 
 ratio of hot supply reference flow to total reference flow 
 element in the relative gain array 
 the relative gain array matrix 
 liquid density 
 abbreviations
 
CV controlled variable, a syst em output that we wish to maintain at a set point value</text>
        </slide>
        <slide>
          <slideno>6</slideno>
          <text>Fall 2004 ICE Topics: Process Control by Design  10.492 
 Lecture Notes 1: Analyzing the Shower Process 
revised 2004 Dec 16  7 variables are constants, made up of the partial derivatives from linearizing and ratios of the 
scaling ranges. 
 
how to choose scaling ranges for the variables 
 disturbances are imposed on you.  Scale acco rding to what you an ticipate (from operating 
data, similar operations, genera l experience, or judgment.) 
 controlled variables are what you hope to achieve.  Scale according to some realistic 
range of operation. 
 manipulated variables are a design choice.  Scale by the amount of influence you must 
bring to bear to counteract the disturbances. 
 One of the objectives of our modeling is to  reconcile these various specifications. 
 
linear equation systems are often presented in matrix notation 
 









+











=



*'
c*'
h
c
rcr h
rhr*'
c*'
h
c
rr cr h
rr hrc h
*'*'
TT
TT
FF
TT
FF0 0
FF
TF
FT T
TF
FT TFF
FF
TF
 (1-16) 
 
We shall give these matrices standard names, b ecause these linear system models all look alike: 
 *'
d*
d*'
m*
m*'xP xP y +=  (1-17) 
 When we make a linear approximation to some process model, it always comes down to this 
form.  The gain matrices P
m* and P d* contain the numbers that di stinguish one process from 
another.  The input vectors x m* and x d* are processed by the gain matrices to produce the output 
vector y*.   
 We could of course write the linear system e quation without the * superscript if we had not 
scaled the variables.  However, the  superscript is necessary, because the linear system 
approximation depends on deviatio ns around a reference condition. 
 
we introduce the Relative Gain Array to help us make a control decision 
We now have a very distinguished-looking material  and energy balance pair.  We must use our 
linear system model to answer the question of ho w to pair up the controlled and manipulated 
variables into control loops.  The RGA (Relativ e Gain Array) can help.  The RGA builds on the 
gain matrix P m* to illustrate how manipulated variables influence controlled variables when we 
connect them by control loops.  Thus, it indica tes how control loops might interact  how 
attempting to control one variable mi ght disturb another as a side-effect.</text>
        </slide>
        <slide>
          <slideno>5</slideno>
          <text>Fall 2004 ICE Topics: Process Control by Design  10.492 
 Lecture Notes 1: Analyzing the Shower Process 
revised 2004 Dec 16  6 we introduce scaled variables to put deviations into perspective 
The fuel gauge in a car tells you the fraction of the fuel remaining, not the actual volume.  One 
litre may be sufficient to get you home in your Pr ius, but not in your Escalade  the gauge will 
indicate the relevance of 1L to each automobile.  This is the use of a scaled variable. 
 
Suppose we expect T h to vary within the range T h,min to T h,max.  Then we define a scaled variable 
 
min,h max,h hhhr h *'
h
T T TTTTT
=
 (1-12) 
 
1 T0TT TT : maximumat 0 T1TT TT : minimumat 
max*'
h
hhr max,h
max*'
hmin*'
h
hhr min,h
min*'
h
==
 (1-13) 
 Where the maximum and minimum scaled values  actually lie depends on where the reference 
value T
hr falls within the operating range Th. 
 
 for academic derivations and textbook material, we tend to set the reference to the desired 
value (the set point) as in the derivation a bove.  Thus the scaled variable would vary 
around zero (from -0.5 to 0.5, say). 
 for operation in the control room, we prefer a 0 to 1 scale (or equivalently, 0 to 100%) so 
we set the reference to the minimum value.  Then the desired value will become, e.g., 0.5 
in scaled terms, and we will see the s caled variable wander about that value. 
 Now, substitute scaled variable definitions into the material and energy balances (1-10) and (1-
11).  
*'
cc *'
hh *'FFFFFFF+=  (1-14) 
 
 
*'
cc
rcr *'
hh
rhr *'
cc
rr cr *'
hh
rr hr *'TTT
FFTTT
FFFTF
FT TFTF
FT TT++

+

=  (1-15) 
 
dont panic when you l ook at these equations 
They may look complicated, but they are the same  old material and energy balances: the flow 
rate is the still the sum of the inlet flows, a nd the outlet temperature de pends on the inlet flows 
and temperatures.  The * means that the physic al variable has been divided by its operating 
range, so that its magnitude will not exceed 1.  The  means that a steady condition has been 
subtracted from the physical variable as a referen ce.  The coefficients of these scaled deviation</text>
        </slide>
        <slide>
          <slideno>1</slideno>
          <text>Fall 2004 ICE Topics: Process Control by Design  10.492 
 Lecture Notes 1: Analyzing the Shower Process 
revised 2004 Dec 16  2  
F T FhTh
FcTcF TF T F T FhTh
FcTcF T
 
 
Our shower should operate as a steady process.  To design it, we must specify steady conditions, 
valve sizes, pipe size, supply pr essure, instruments, and so forth.  Mindful of the discussion 
above, well also want to examine its operability.   
 
we think about how the process should operate 
The process operating objective is to maintain st eady F and T at desired conditions.  What might 
interfere with that objective?  How might we respond?  
 It will clarify our thinking if we classify the variables:  CV  controlled variables F  T (variables im portant for safety, product quality, etc.)  
MV  manipulated variables F
h   F c (manipulate to exert influence on CV) 
DV  disturbance variables T h  Tc (these disrupt CV, and we try to counter them with MV) 
 When we consider using MV to counter DV so th at CV can be maintained at a set point, we 
introduce the topic of process control.   
 
we briefly describe the notion of process control 
When we talk about process control, we usually run across a feedback structure: 
 
observe CV and use that information to adjust  MV to compensate for the effects of DV. 
 
Feedback implies a reverse flow : while inputs DV and MV flow through the process to affect 
the output CV, information about CV is fed bac k, outside the process, to change MV.  The 
feedback path creates a control loop.  
feedbackprocessCV
MVDV
feedbackprocessCV
MVDV
 
 
Deciding how to adjust MV at any time is the fu nction of a device called the controller.  In 
automatic control we close the loop, giving th e controller authority to set MV.  If we open 
the loop we block the feedback path and thus set MV manually</text>
        </slide>
        <slide>
          <slideno>0</slideno>
          <text>Fall 2004 ICE Topics: Process Control by Design  10.492 
 Lecture Notes 1: Analyzing the Shower Process 
revised 2004 Dec 16 Dr. Barry S. Johnston, Copyright 2004. 1  
what we will be doing in this module 
The broad context for this module is the comm onsense notion that, wh en designing something, 
one should plan for the off-normal conditions that may occur. 
 The particular context is the desi gn of continuous chemical processes
.  Design starts with some 
product in mind (a simple molecule, a complex s ubstance, or a structur ed product), and possibly 
several distinctive paths to reach it (the varia tions in chemistry, sequence, and processing that 
comprise a chemical process).  The alternative proce sses are examined in a cursory fashion and 
unpromising ones discarded.  As the design pro ceeds, increasing effort is spent on fewer 
alternatives in the appr oach to detailed design. 
 A continuous process is concei ved and designed as a steady-st ate operation.  However, the 
process must start up, shut down, and operate in the event of disturbances, and so the time-
varying behavior of the process should not be  neglected.  A proper dynamic simulation of the 
process requires that a number of  design details be in place, and thus must take place in later 
stages of design.  Even so, it is helpful to cons ider the operability of a process earlier in the 
design, when alternatives are still being compared.   In this module, we will examine some tools 
that will help to evaluate the operability of the candidate process at the preliminary design stage, 
before substantial effort has been inve sted.  Thus, these are screening tools. 
 The ideas presented in these notes are derived from the texts by Marlin (1), McAvoy (2), and 
Seider et al (3).  
a few ways in which processes can go wrong 
bad operation  
 inadequate procedures 
 mis-tuned controllers 
 malfunctioning instruments 
bad implementation of the design 
 backwards flowmeters and ot her installation mistakes 
 valve in wrong place 
 wrong type of valve 
 mistakes in construction/check-off 
 field decisions that should have  been specified in the design 
bad design 
 mis-sized equipment 
 poor controller scheme 
 prone to instability 
 poorly located or selected instrument 
 insufficient number of instruments 
 
we will begin by analyzing a simple process 
Its only an ordinary shower, but  well dress it up as a chemical  process: two feed streams enter 
and mix to form an outlet stream of flow F and temperature T.  Instrume nts are provided on the 
exit line to measure these quantities, a nd valves regulate the feed streams.</text>
        </slide>
        <slide>
          <slideno>15</slideno>
          <text>Fall 2004 ICE Topics: Process Control by Design  10.492 
 Lecture Notes 1: Analyzing the Shower Process 
revised 2004 Dec 16  16 DC disturbance cost 
DV disturbance variabl e, a system input that we have no influence over 
MV manipulated variable, a system i nput that we may adjust for our purposes 
RGA relative gain array  subscripts
 
c cold water supply stream h hot water supply stream max maximum value of a variable min minimum value of a variable pc perfect control has been exerted on CV r a reference operating cond ition around which we deri ve a linear approximation 
 superscripts
 
 indicates a deviation variab le; i.e., the physical variable minus a reference value 
* indicates a scaled variable; i.e., variab le has been divided by its operating range</text>
        </slide>
        <slide>
          <slideno>9</slideno>
          <text>Fall 2004 ICE Topics: Process Control by Design  10.492 
 Lecture Notes 1: Analyzing the Shower Process 
revised 2004 Dec 16  10 ()
()
()()()
()21 12 22 1111 2112 22
mT
m1
m m11 1221 22
m21 12 22 11 m22 2112 11
m
pp ppp pp p
PdetPadj
P Pinvp pp pPadjpp pp Pdetp pp pP



= ==

==
=
 (1-22) 
 
Then we perform the element-by-element product.  
21 12 22 11 22 11 21 1221 12 22 1121 12 22 11 11 2112 22
22 2112 11
pp pp1
pp pppp pp    pp pp1
p pp p
p pp p




=






=
 (1-23) 
 
This is the form of the RGA for a 22 system.  What it tells depends on the numerical values for p
ij, which (of course) depend on the pa rticular process being modeled. 
 
our shower process is a 22 system, so substitute the elements from P m* into the form 
 







=

















=
cr hrcr r
cr hrr hrcr hrr hr
cr hrcr rrr hr c h
rr cr c h
rr cr c h
rr hr c hrr hr c h
rr cr c h
T TTT
T TT TT TT T
T TTT
    FT T
FF
TF
FT T
TF
FF1
FT T
TF
FF
FT T
FF
TFFT T
FF
TF
FT T
TF
FF
(1-24) 
 
We find  

 Each element has a value between  0 and 1, depending on how T r falls between T cr and 
Thr. 
 All of the scaling factors di vided out  the RGA is inhere ntly dimensionless (recall its 
definition as a ratio).  This is why the * scaling marker was omitted from the foregoing matrix manipulations of the 22 RGA. 
 We can use the M&amp;EB at the reference condition (1-9)</text>
        </slide>
        <slide>
          <slideno>2</slideno>
          <text>Fall 2004 ICE Topics: Process Control by Design  10.492 
 Lecture Notes 1: Analyzing the Shower Process 
revised 2004 Dec 16  3 we apply feedback control to the shower process 
Here are two alternative feedb ack structures for the shower: 
 
F T FhTh
FcTcF TF T FhTh
FcTcF TF T F T FhTh
FcTcF T
 F T FhTh
FcTcF TF T FhTh
FcTcF TF T F T FhTh
FcTcF T
 
 
Each structure comprises two separate control lo ops; i.e., connections be tween a controlled and a 
manipulated variable.  In the left figure, for example, if the flow rate is observed to change, the 
hot water valve will be adjusted.  Changes in the temperature motivate adjustments to the cold 
water valve.  The right figure makes th e opposite pairings between CV and MV. 
 
we must choose one of thes e alternatives to pursue 
These are design alternatives, a nd we must choose between them.  Steady-state considerations 
seem not to favor one over the other, so we mu st ask which of these is better in overcoming a 
disturbance?  responding to a change in set poin t?  maintaining a stable operation?  reducing 
interaction between th e two control loops? 
 
We have several days of mathematics to do in answering this question.  Before we start that, 
though, we should use our intuiti on: which do you prefer?  Why? 
 
chemical engineers frequently find recour se in material and energy balances 
material balance: 
 
+=


F F F dVdtd
cc hh
V (1-1)
 
 
energy balance:  
() ( ) ( )()ref p ref c pccc ref h phhh
Vref p TTCF TTCF TTCF dVTTCdtd+ =


 (1-2) 
 
Well make two approximations to simplify the analysis: 
(1) physical properties constant  with temperature; e.g.  = c = h and thus  
 
[] 0 VdtddVdtd
V==


 (1-3)</text>
        </slide>
        <slide>
          <slideno>7</slideno>
          <text>Fall 2004 ICE Topics: Process Control by Design  10.492 
 Lecture Notes 1: Analyzing the Shower Process 
revised 2004 Dec 16  8 





K LK
MK
33 32 3123 22 2113 12 11
)3y()2y()1y()3mx()2mx()1mx(
 (1-18) 
 
(The variable names in parentheses are labels.  They show that, e.g., coefficient 31 relates 
manipulated variable x m1 to controlled variable y 3.) 
 The RGA elements are defined as a ratio of gains.  
constant iykyxyconstant mjxmkxxy
     perfect loops other  with loop y   x theof gain open loops other  with loop y   x theof gain 
mjimjii mji mj
ij

=
 (1-19) 
 
For the numerator, all control loops except x mj  y i have been disconnected (made open).  
Therefore there is no mechanism for manipulations of x mj to feed back through other control 
loops and motivate changes in the other x mk.  For the denominator, it is imagined that all the 
other loops have been connected (made closed), and furthermore that they are SO GOOD that the 
other y k never vary away from set point, even when x mj is manipulated to influence y i. 
 
what these RGA elements mean 
 if ij = 1, then x mj influences y i with no interference from th e other control loops.  This is 
really good. 
 if ij = 0, then x mj has little effect on y i.  It will not be of much  use in controlling it.  In 
fact, its main effects will be exerted through the other loops, so ther e will be significant 
loop interaction. 
 if ij = big, then the effect of x mj is greatly diluted by the ot her loops.  Changes in those 
loops will cause the influence of x mj on y i to vary widely, causi ng stability problems. 
 if ij &lt; 0, the operation of other l oops reverses th e effect of x mj.  Stability problems! 
 As 
ij departs from 1, the behavior of the l oop is subject to non-welcome influences. 
 
we use RGA to decide how to pair CV with MV 
The RGA summarizes all possible MV-CV pairs.  Ou r design decision is to select n pairs from 
the nn matrix of choices  we might think of ci rcling our picks on a printed page.  In the end, 
each row or column will have only one circled element.</text>
        </slide>
        <slide>
          <slideno>8</slideno>
          <text>Fall 2004 ICE Topics: Process Control by Design  10.492 
 Lecture Notes 1: Analyzing the Shower Process 
revised 2004 Dec 16  9 a rule for pairing CV and MV, based on the RGA 
McAvoy (2, p.84) says 
 
Always pair on positive RGA elements that are closest to 1.0.  Check the resulting 
pairings for stability using Ni ederlinskis theorem.  If th e pairings are unstable choose 
other positive pairings with va lues closest to 1.0.  Avoid negative pairings if possible. 
 He illustrates his instability caveat with a case in  which RGA elements of 1.0 are discarded in 
favor of elements equal to 4.5.  The Niederlinski  Stability Theorem (modified from (2), p.83) is 
 
The closed loop system resu lting from the pairing  
 
x
m1  y 1   x m2  y 2    x mn  y n    
 is unstable if  
()
0
pPdet
n
1iiim&lt;

= (1-20) 
 where p
ii are the diagonal elements of P m.  Notice that the gain matrix P m must be arranged so 
that the RGA pairing is on the diagonal.    
we can calculate the individual RG A elements from the definition 
The linear system model equations can be solv ed for individual RGA elements by holding 
various x m and y variables constant, according to the definition (1-19). 
 
we can also calculate the RGA directly  from the gain coefficient matrix 
 
()T1
m m P P=  (1-21) 
 Lets try it for the general 22 case: first we do the matrix operations on the gain coefficient 
matrix.</text>
        </slide>
        <slide>
          <slideno>10</slideno>
          <text>Fall 2004 ICE Topics: Process Control by Design  10.492 
 Lecture Notes 1: Analyzing the Shower Process 
revised 2004 Dec 16  11  
cr hrcrcr hr hr
rcr hr r
F FTF TFTF FF
++=+=
 
 
to express the RGA elements (1-24) in terms of the manipulated variables  
====
1FF
T TT TFF
T TTT
rcr
cr hrr hrrhr
cr hrcr r
 (1-25) 
 where we have defined  as the fraction of the flow that is from the hot water supply.  The RGA 
then becomes  




=
11
)T()F()F(     )F(               c h
 (1-26) 
 
remember that our question is which way to pair CV with MV 
We have two choices: 
 (1) manipulate hot water flow to control total flow, and adjust temperature by manipulating cold 
water.  




=
11
)T()F()F(     )F(               c h




=
11
)T()F()F(     )F(               c h
 (1-27)
 
 
(2) manipulate cold water to control total flow , and adjust temperatur e by manipulating hot 
water.  




=
11
)T()F()F(     )F(               c h




=
11
)T()F()F(     )F(               c h
 (1-28)
  
 
We want pairings that have RGA elements close to  1.  Therefore, if we use mostly hot water in 
the mix (F r is mostly F hr), then  ~ 1 and we should choose pairi ng (1).  Should conditions be 
opposite, we should use pairing (2).  As  approaches 0.5, neither pa iring would be preferred, 
and either would result in  significant interaction be tween the control loops.</text>
        </slide>
        <slide>
          <slideno>13</slideno>
          <text>Fall 2004 ICE Topics: Process Control by Design  10.492 
 Lecture Notes 1: Analyzing the Shower Process 
revised 2004 Dec 16  14 0.5
-0.5Tc*
Th*0.5
-0.5Tc*
Th*
 
 
For plotting the effects of two disturbance va riables, we can summarize the two variables by 
their direction angle.  In the figure, the points are spaced at 45 intervals.  From the expression 
for DC, we compute:  
disturbance 
direction 
() T
h* T c* DC 
0 0.5 0 ()h hrTFB5.0  
45 0.5 0.5 ( )c cr h hr TF TFB5.0 +  
90 0 0.5 ()c crTFB5.0  
135 -0.5 0.5 ( )c cr h hr TF TFB5.0 +  
 and so forth.  The constant B is  
21
2
c2
h cr hr F1
F1
T T1B



+
=  (1-36) 
 
As we surmised from examining the DC expression, the largest DC occurs at 45 and 225.  
we examine whether our MV are up to the job 
DC tells us which combinations of disturbances  require the largest adjustment of manipulated 
variables.  At these conditions, we should examine just how large this adjustment is.  For example, at 45, the scaled cold flow manipulation from (1-34) is 
 
()
()c cr hrc cr h hr *'
pc,cF T TTFTF5.0F+=  (1-37) 
 
That is, we must increase the cold flow.  To see how much flow is required, we write the flow in 
physical terms</text>
        </slide>
        <slide>
          <slideno>3</slideno>
          <text>Fall 2004 ICE Topics: Process Control by Design  10.492 
 Lecture Notes 1: Analyzing the Shower Process 
revised 2004 Dec 16  4 This is often a reasonable approximation for liqui ds.  It implies that the amount of mass in the 
system is constant, and that changes in flowra te are immediately communicated throughout the 
system.  
 
(2) V is not significantly large, so that the enthalpy variations within V as T varies are not significant.  Thus 
 
() 0 dVTTCdtd
Vref p 


 (1-4) 
 
This is a more serious assumption.  One of its implications is that there is no time delay: a 
change in valve position or inle t temperature immediately affects the flow and temperature at the 
showerhead.  With these simplifications (1-1) and (1-2) become  
c
c hc
h
c hhc h
TFFFTFFFTFFF
+++=+=
 (1-5) 
 
These equations (under our assumptions) apply wh ether the flow is st eady or time-varying. 
 
we make a linear approximation to the nonlinear energy balance 
We linearize the energy balance because 
 it makes the problem easier to solve 
 our control objective is to operate at a part icular point.  A linear approximation based on 
that operating point can be quite  accurate in the region of that  point.  (Of course, far from 
the reference point, it can be wildly misleading!) 
 
We express a nonlinear function f as a Taylor series anchored  on the reference conditions x r and 
yr; we truncate after the first derivatives. 
 
() ( ) () ()r2 2
r2r1 1
r1r2 r1 2 1 x xxfxxxfx,xf x,xf ++   (1-6) 
 
This Taylor series can be exte nded to other numbers of variables.  In our case, the shower 
temperature is a function of the variables F h, Fc, Th, and T c.  Four partial derivatives will be 
necessary to approximate this function.  Doing so, we arrive at a linearized energy balance</text>
        </slide>
      </slides>
      <videos/>
    </lecture>
    <lecture>
      <lecture_title>Scaled Deviation Variables, Matrix Operations</lecture_title>
      <lecture_pdf_url>https://ocw.mit.edu/courses/10-492-1-integrated-chemical-engineering-topics-i-process-control-by-design-fall-2004/resources/notes_1a_matrix/</lecture_pdf_url>
      <lectureno>3</lectureno>
      <slides>
        <slide>
          <slideno>1</slideno>
          <text>Fall 2004 ICE Topics: Process Control by Design  10.492 
Lecture Notes 1a: Brief Guide to Matrices 
combining a matrix with a scalar quantity 
a12 = ca11 ca12 Ac = cA = c 
 a11  ca21  a21 a22  ca22  
 c + a11 c + a12   a11 a12  c + A = A + c = c + = c + a21 c + a22   a21 a22  
adding two matrices (they mu st be of the same shape) 
 a11 a12   b11 b12   a11 + b11 a12 + b12 A + B = B + A = = +   a21 a22   b21 b22   a21 + b21 a22 + b22  
the transpose of a matrix is another ma trix; rows and columns are interchanged 
T T
 x1   a11 a12 
 a11 a21 a31 
xT = x2  =[ x1x2 x3 ] AT =  a21 a22 
 =   
 x3   a31 a32   a12 a22 a32 
 
(Notice in this last example that the subscripts are not to be interpreted merely as placeholders, 
but as identifying a particular element.  That is, a 31 means the actual quantity that was in 
position (3,1) in matrix A , but is in position (1,3) in matrix AT.) 
In matlab, compute the transpose by a single quote after the matrix name 
a = 
1 2 
3 4 
&gt;&gt; a' 
ans = 
1 3 
2 4 
multiplying matrices is where things get more complicated 
The inner dimensions must be the same for multip lication to be possible.  Multiplication is not 
commutative. 
 x1  1 1 y x 1 2  ][ yx = [ y y ]= 
 y x 
[ 2 , 1 2,1 ][ 2 , 2 ]  1 2 y x y x  x2   2 1 2 2  
y ]
 x1  = y x + y x ][ xy =[ y1 2  1 1 2 2 [ 2,1 2 , 1 ][ 1 , 1 ]= scalar 
 x2  
revised 2004 Dec 17 2</text>
        </slide>
        <slide>
          <slideno>3</slideno>
          <text>Fall 2004 ICE Topics: Process Control by Design 10.492 
Lecture Notes 1a: Brief Guide to Matrices 
For a 33 matrix, the determinant requires six pr oducts. The diagonal rule  is extended: positive 
for the three diagonals that slop e down to the right, and negati ve for those sloping down to the 
left. 
32 22 12 
31 21 11 
33 32 31 23 22 21 13 12 11 
a a a 
a a a 
a a a a a a a a a 
= 
322212
312111
33 32 3123 22 2113 12 11
aaa
aaa
a a aa a aa a a
=(
Adet )=A +a12a =a11a 22a33 23 a31 +a13a21a32 
A Aa13a22a31 a11a23a32 a12a21a33 
- -+ +
For larger determinants, the diagonal rule does not work; we will not go into these, however. 
Matlab 
d = 
1 2 2 
3 4 3 
2 4 1 
&gt;&gt; det(d) 
ans = 
6 
the cofactor is a sub-determinan t pulled from a larger determinant 
Take any element a ij; delete row i and column j. The remaining determinant, when multiplied by 
(-1)i+j, is the cofactor of a ij. For example, the cofactor of a 21 in a 33 determinant is 
11 11a a12 12a a13 13a a
21 21a a A A= =22 22a a23 23a a
31 31a a32 32a a33 33a a
1 1 2 a12 a13+()a =(a12a33 a13a32 )
32 a33
(In this example, the subscripts are not mere pl aceholders, but refer to those particular elements 
of a 33 determinant that were extracted into the cofactor.) 
the adjoint is a transposed square matrix of cofactors 
Each matrix element is replaced by its cofact or, and then the new matrix is transposed. 
revised 2004 Dec 17 4</text>
        </slide>
        <slide>
          <slideno>0</slideno>
          <text>Fall 2004 ICE Topics: Process Control by Design  10.492 
Lecture Notes 1a: Brief Guide to Matrices 
what meaneth we by matrix? 
A matrix is a 2-dimensional array of things, wher e these things can be nu mbers, variables, or 
math expressions.  The matrix is naviga ted by rows and columns, and we always  name the row 
first when locating any particular element of the matrix.  When presenting matrices, we double-
underline the summary name A  of the matrix, corral the elements in braces, and provide row-
column subscripts to locate in dividual elements.  (Regard a ij as the name for some quantity of 
interest  number, variable, expression.) 

 
 a11 a12 a13 a14





A
a a 21 a22 a23 a24
31 a32 a33 a34
Matlab indicates an element by putting subscripts in parent heses after the matrix name 
&gt;&gt; a = [ 1 2 ; 3 4 ] 
a = 
1 2 
3 4 
&gt;&gt; a(1,2) 
ans = 
2 =
A row matrix is a single row, and a column matrix a single column; we collectively call these 1
dimensional matrices vectors.  We use a sing le underline for the name.  We could still use 
double R,C subscripts, but I dont thi nk most people bother with that. 




 x x11 1 




 =

 


y=
y11[ y12 y13]
=
[y1 3]
 x=
 y y x x2 21 2 
x x31 3 
In matlab, use the semicolon to make a row shift. 
&gt;&gt; y = [ 1 2 3 ] 
y = 
1 2 3 
&gt;&gt; x = [1; 2; 3 ] 
x = 
1 
2 
3 
revised 2004 Dec 17 Dr. Barry S. Johnston, Copyright 2004. 1</text>
        </slide>
        <slide>
          <slideno>2</slideno>
          <text>Fall 2004 ICE Topics: Process Control by Design 10.492 
Lecture Notes 1a: Brief Guide to Matrices 
b11 b12 b11 b a b12 bB A=



 
 
 = 
 
 + +
 a a a a a11 12 11 12 21 11 12 22 
b b b11 b a b12 b +
 +
 a a a a a21 22 21 22 21 22 21 21 22 22 
b11 b12 b11 b12 a b11 b12 


 
 
 = 
 
 + +
 a a a a a11 12 11 21 12 22A B 
Matlab uses * to indi cate matrix multiplication 
a = 
1 2 
3 4 
b = 
2 4 
3 6 
&gt;&gt; a*b 
ans = 
8 16 
18 36 
&gt;&gt; b*a 
ans = 
14 20 
21 30 =
b b b b a b b +
 +
 a a a a a21 22 21 22 11 21 21 22 12 21 22 22 
element-by-element multip lication is only for same-shape matrices 
b11 b12 b11 a b12 


 
 
 = 
 

a a a11 12 11 12A 
Matlab uses .* to indicate element by element multiplication 
&gt;&gt; a.*b 
ans = 
2 8 
9 24 
B B
A
=
=
b b b a b a a a21 22 21 22 21 21 22 22 
the determinant is a scalar quantity computed from the elements of a square matrix 
For a 22 matrix, the determinant is the diffe rence of two products. The products are taken 
along diagonals in the matrix: positive for th e diagonal that slopes down to the right, and 
negative for that sloping down to the left. 
22 21 12 11 
a a a a 
22 2112 11
a aa a
()
Adet=
A
=
a11a
a a22 12 21 
- - + +
revised 2004 Dec 17 3</text>
        </slide>
        <slide>
          <slideno>5</slideno>
          <text>Fall 2004 ICE Topics: Process Control by Design  10.492 
Lecture Notes 1a: Brief Guide to Matrices 
Matlab 
&gt;&gt; d, inv(d) 
d = 
1 2 2 
3 4 3 
2 4 1 
ans = 
-1.3333 1.0000 -0.3333 
0.5000 -0.5000 0.5000 
0.6667 0 -0.3333 
&gt;&gt; d*inv(d) 
ans = 
1.0000 0 0.0000 
0.0000 1.0000 0.0000 
-0.0000 0 1.0000 
the inverse allows us to solve matrix equations 
Solve for x ; the order of multiplication is important in the following steps. 
A x A = b 
1 1 ) x A = A1b ( Abnot 
x I = A1b 
x = A1b 
The inverse is not always computati onally efficient.  In Matlab, an al ternative is left division, \. 
a = 
1 2 
3 4 
b = 
2 
3 
&gt;&gt; x=inv(a)*b 
x = 
-1.0000 
1.5000 
&gt;&gt; x=a\b % alternative to inverse; order still matters! 
x = 
-1.0000 
1.5000 
revised 2004 Dec 17 6</text>
        </slide>
        <slide>
          <slideno>4</slideno>
          <text>Fall 2004 ICE Topics: Process Control by Design  10.492 
Lecture Notes 1a: Brief Guide to Matrices 
T 
()=A adj 
   
  
   
  
31 21 11 
a a a 
adj 
32 22 12 
a a a 
   
  
   
  
33 23 13 
a a a 
= 
       
  
 
22 12 32 12 32 22 
a a a a a a 
23 13 33 13 33 22 
a a a a a a 
  
21 11 31 11 31 21 
a a a a a a 
23 13 33 13 33 23 
a a a a a a 
 
21 11 31 11 31 21 
a a a a a a 
22 12 32 12 32 22 
a a a a a a 
       
  
   
32 22 
a a 
33 22 
a a  
32 12 
a a 
33 13 
a a 
22 12 
a a 
23 13 
a a 
   
= 
   
31 21 
a a 
33 23 
a a 
31 11 
a a 
33 13 
a a  
21 11 
a a 
23 13 
a a 
   
  
 31 21 
a a 
32 22 
a a  
31 11 
a a 
32 12 
a a 
21 11 
a a 
22 12 
a a 
  
 
the inverse is the adjoint divided by the determinant 
()A inv =A 1 = ()
()A det A adj 
We care about the inverse, because 
1 0 0 
A A 1 
   
= = =  0I A A 1 1 
O   0 
M 
 
0 0 L  1 
I is the identity matrix; any matrix A  multiplied by (suitably sized) I  is just A . 
revised 2004 Dec 17 5</text>
        </slide>
      </slides>
      <videos/>
    </lecture>
  </lectures>
</doc>
